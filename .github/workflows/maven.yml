# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - name: Set up JDK 11      
        uses: actions/setup-java@v1
        with:
          java-version: 11
      - uses: actions/checkout@v2
      - name: current date
        id: date
        run: |
          sudo unlink /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
          echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"
     
      - name: Download tomcat
        run: |
          cd /home/runner
          wget https://tomcat.apache.org/tomcat-8.5-doc/appdev/sample/sample.war
          wget http://tomcat:Password@192.168.1.9:8080/manager/text/deploy?path=/sample&war=file:/home/runner/sample.war -O - -q
          ls -lrt 
      - name: Run one-line script
        id: status
        run: 
           wget -O /dev/null http://192.168.1.9:8080/sample 2>&1 | grep -o "200"
           
      - name: deployment job variable 1
        if: always()
        id: jobstatus
        run: |
          
          echo "::set-output name=status::${{ job.status == 'success'}}" 
          
      - name: dry run 1
        if: always ()
        run: |
            echo ${{ steps.jobstatus.outputs.status }}
      
