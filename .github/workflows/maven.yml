# This workflow will build a Java project with Maven, and cache/restore any dependencies to improve the workflow execution time
# For more information see: https://help.github.com/actions/language-and-framework-guides/building-and-testing-java-with-maven

name: Java CI with Maven

on:
  push:
    branches: [ master ]
jobs:
  deploy-staging:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - name: current date
        id: date
        run: |
          sudo unlink /etc/localtime
          sudo ln -s /usr/share/zoneinfo/Asia/Kolkata /etc/localtime
          echo "::set-output name=date::$(date +'%Y-%m-%dT%H:%M:%S')"
      #- name: Env variables
       # run: |
         # echo "url=$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID" >> $GITHUB_ENV
        
         # echo "run=$GITHUB_RUN_NUMBER" >> $GITHUB_ENV
          #echo "ci=$CI" >> $GITHUB_ENV
      - name: variable
        id: env
        run: |
          
          echo "::set-output name=env::$GITHUB_SERVER_URL/$GITHUB_REPOSITORY/actions/runs/$GITHUB_RUN_ID"
          echo "::set-output name=num::$GITHUB_RUN_NUMBER"
          echo "::set-output name=ci::$CI"
          
     # - name: print
      #  run: |
       #   ${{ steps.date.outputs.date }}
        #  ${{ steps.env.outputs.env }}
         # ${{ steps.env.outputs.num }}
          #${{ steps.env.outputs.ci }}       
      
      - name: Run one-line script
        id: status
        run: 
           echo "::set-output name=op::$(wget -O /dev/null https://www.google.com/ 2>&1 | grep -o "200")"
           
      - name: deployment job variable 1
        if: ${{ steps.status.outputs.op }} == 200
        id: jobstatus
        run: |
          
          echo "::set-output name=status::${{ job.status == 'success'}}" 
          
      - name: dry run 1
        run: |
            echo ${{ steps.jobstatus.outputs.status }}
      - name: deployment job variable 2
        if: ${{ steps.status.outputs.op }} != 200
        id: successstatus
        run: |
          
          echo "::set-output name=status::${{ job.status == 'failure'}}" 
          
      - name: dry run 2
        run: |
            echo ${{ steps.successstatus.outputs.status }}
